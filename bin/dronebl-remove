#!/usr/bin/env python3

from argparse import ArgumentParser
from datetime import datetime
from io       import StringIO
from os       import environ, path
from sys      import exit, stderr, stdin, stdout
from typing   import List, Optional, Tuple

from dronebl  import DroneBL

def _lookup(key: str, ip: str) -> List[int]:
    d = DroneBL(key)
    return [l.id for l in d.lookup(ip)]

def main():
    parser = ArgumentParser(
        description="BAD IP ADDRESS RAH")
    parser.add_argument("key", type=str)
    parser.add_argument("ip")
    args = parser.parse_args()

    key = args.key
    if key == "-":
        if "DBLKEY" in environ:
            key = environ["DBLKEY"]
        else:
            stderr.write("key not found in env\n")
            exit(1)
    else:
        key_path = path.expanduser(key)
        if path.isfile(key_path):
            with open(key_path) as key_file:
                key = key_file.read().strip()
        else:
            stderr.write("key file non-existent\n")
            exit(2)

    drone = DroneBL(key)
    for id in _lookup(key, args.ip):
        success, msg = drone.remove(id)
        if success:
            print(f"- #{id} removed: {msg}")
        else:
            stderr.write(f"! #{id} not removed: {msg}\n")

if __name__ == "__main__":
    main()
